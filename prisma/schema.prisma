generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL")
  directUrl = env("POSTGRES_URL_NON_POOLING")
}

model RequestedAccount {
  id        String   @id @default(uuid())
  email     String   @unique
  createdAt DateTime @default(now())
}

model User {
  id                       String                     @id @default(uuid())
  name                     String
  email                    String                     @unique
  password                 String
  role                     Role                       @default(USER)
  status                   Status                     @default(ACTIVE)
  createdAt                DateTime                   @default(now())
  updatedAt                DateTime                   @updatedAt
  isNewUser                Boolean                    @default(true)
  UserWhoFavoritedIntranet UserWhoFavoritedIntranet[]
}

model Category {
  id          String     @id @default(uuid())
  name        String     @unique
  description String?
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  intranets   Intranet[]
}

model Intranet {
  id                       String                     @id @default(uuid())
  link                     String                     @unique
  categoryId               String                     @map("category_id")
  createdAt                DateTime                   @default(now())
  updatedAt                DateTime                   @updatedAt
  description              String?
  name                     String                     @unique
  category                 Category                   @relation(fields: [categoryId], references: [id], onDelete: Cascade, onUpdate: NoAction)
  UserWhoFavoritedIntranet UserWhoFavoritedIntranet[]
}

model UserWhoFavoritedIntranet {
  userId     String   @map("user_id")
  intranetId String   @map("intranet_id")
  intranet   Intranet @relation(fields: [intranetId], references: [id], onDelete: Cascade, onUpdate: NoAction)
  user       User     @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@id([userId, intranetId])
}

enum Role {
  USER
  ADMIN
}

enum Status {
  ACTIVE
  INACTIVE
  SUSPENDED
}
